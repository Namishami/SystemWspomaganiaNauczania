<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Zadaniowo.pl</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body id="body">
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Strona główna", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>

            @if (Request.IsAuthenticated)
            {
                <ul class="nav navbar-nav">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="navbarDropdown1" tabindex="0" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="cursor:pointer;">
                            Ustaw w kolejności
                            <span class="caret"></span>
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown1">
                            <li>@Html.ActionLink("Wszystkie zadania", "Index", "OrderTasks", new { @class = "dropdown-item" }, null)</li>
                            @if (Roles.IsUserInRole(User.Identity.Name, "Admin"))
                            {
                                <li>@Html.ActionLink("Nowe zadanie", "Create", "OrderTasks", new { @class = "dropdown-item" }, null)</li>
                            }

                        </ul>
                    </li>

                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="navbarDropdown2" tabindex="0" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="cursor:pointer;">
                            Grupowanie
                            <span class="caret"></span>
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown2">
                            <li>@Html.ActionLink("Wszystkie zadania", "Index", "GroupTasks", new { @class = "dropdown-item" }, null)</li>
                            @if (Roles.IsUserInRole(User.Identity.Name, "Admin"))
                            {
                                <li>@Html.ActionLink("Nowe zadanie", "Create", "GroupTasks", new { @class = "dropdown-item" }, null)</li>
                            }

                        </ul>
                    </li>



                </ul>
            }
            @Html.ActionLink("Informacje", "InformationPage", "Home", new { area = "" }, new { @class = "navbar-brand" })
            @Html.Partial("_LoginPartial")

        </div>
    </div>

    <div class="container body-content">

        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - Norbert Księżopolski</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/scripts/Scripts.js")
    @RenderSection("scripts", required: false)
</body>
</html>

<script>
    var loggedUser = "@HttpContext.Current.User.Identity.Name";
    console.log(loggedUser);
    window.onload = (event) => {
        if (loggedUser != "") {
        var FontName = '@System.Configuration.ConfigurationManager.AppSettings["FontName"]';
        var FontColor = '@System.Configuration.ConfigurationManager.AppSettings["FontColor"]';
        var FontSize = '@System.Configuration.ConfigurationManager.AppSettings["FontSize"]';

        var body = document.getElementsByTagName("body").body;

        body.style.fontFamily = FontName;
        body.style.color = FontColor;
        body.style.fontSize = FontSize;

        var hTags = document.querySelectorAll("h1, h2, h3, h4, h5, h6");
        hTags.forEach(h => {
            h.style.fontFamily = FontName;
            h.style.color = FontColor;
            if (h.style.fontSize <= FontSize) {
                h.style.fontSize = FontSize;
            }

        })
        var pTag = document.querySelectorAll("p");
        pTag.forEach(p => {
            p.style.fontFamily = FontName;
            p.style.color = FontColor;
            p.style.fontSize = FontSize;
        })


        var aTag = document.querySelectorAll("a");
        aTag.forEach(a => {
            a.style.fontFamily = FontName;
            a.style.color = FontColor;
            a.style.fontSize = FontSize;
        })

        var inputTag = document.querySelectorAll("input");
        inputTag.forEach(input => {
            input.style.fontFamily = FontName;
            input.style.color = FontColor;
            input.style.fontSize = FontSize;
        })
        }
    }
</script>
